/*
Copyright (c) 2022 Giuliano Franca

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
#include <maya/MFnPlugin.h>
#include <maya/MGlobal.h>

#include "utils/preprocessors.hpp"
#include "interpolators/waveInterpolator.hpp"


const char * PLUGIN_NAME = "@PLUGIN_NAME@";
const char * AUTHOR = "@AUTHOR@";
const char * VERSION = "@STR_VERSION@";

// Interpolators.
const MString WaveInterpolator::kInterpolatorName = "waveInterpolator";
const MFnAnimCurve::TangentType WaveInterpolator::kInterpolatorID = MFnAnimCurve::kTangentShared7;


MStatus initializePlugin(MObject mob){
    MStatus status;
    MFnPlugin pluginFn(mob, AUTHOR, VERSION, NULL, &status);
    CHECK_MSTATUS_AND_RETURN_IT(status);
    pluginFn.setName(PLUGIN_NAME);

    // Register plugin content.
    REGISTER_ANIM_CURVE_INTERPOLATOR(pluginFn, WaveInterpolator);

    MString msg;
    msg.format("[^1s] Plugin initialized.", PLUGIN_NAME);
    MGlobal::displayInfo(msg);

    return MStatus::kSuccess;
}

MStatus uninitializePlugin(MObject mob){
    MStatus status;
    MFnPlugin pluginFn(mob, AUTHOR, VERSION, NULL, &status);
    CHECK_MSTATUS_AND_RETURN_IT(status);

    // Deregister plugin content.
    DEREGISTER_ANIM_CURVE_INTERPOLATOR(pluginFn, WaveInterpolator);

    MString msg;
    msg.format("[^1s] Plugin uninitialized.", PLUGIN_NAME);
    MGlobal::displayInfo(msg);

    return MStatus::kSuccess;
}